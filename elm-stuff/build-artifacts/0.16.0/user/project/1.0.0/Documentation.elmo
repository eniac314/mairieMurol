Elm.Documentation = Elm.Documentation || {};
Elm.Documentation.make = function (_elm) {
   "use strict";
   _elm.Documentation = _elm.Documentation || {};
   if (_elm.Documentation.values) return _elm.Documentation.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm),
   $TiledMenu = Elm.TiledMenu.make(_elm),
   $Utils = Elm.Utils.make(_elm);
   var _op = {};
   var initialContent = {wrapper: function (content) {
                           return A2($Html.div,
                           _U.list([$Html$Attributes.$class("subContainerData noSubmenu"),$Html$Attributes.id("Documentation")]),
                           _U.list([A2($Html.h2,_U.list([]),_U.list([$Html.text("Documentation")])),content]));
                        }
                        ,tiledMenu: $TiledMenu.initWithLink(_U.list([{ctor: "_Tuple4",_0: "Bulletins municipaux",_1: "",_2: _U.list([]),_3: ""}
                                                                    ,{ctor: "_Tuple4",_0: "Murol info",_1: "",_2: _U.list([]),_3: ""}
                                                                    ,{ctor: "_Tuple4",_0: "Délibérations",_1: "",_2: _U.list([]),_3: ""}
                                                                    ,{ctor: "_Tuple4",_0: "Gestion des risques",_1: "",_2: _U.list([]),_3: ""}
                                                                    ,{ctor: "_Tuple4",_0: "Elections",_1: "",_2: _U.list([]),_3: ""}
                                                                    ,{ctor: "_Tuple4",_0: "Autres publications",_1: "",_2: _U.list([]),_3: ""}
                                                                    ,{ctor: "_Tuple4"
                                                                     ,_0: "Service-public.fr"
                                                                     ,_1: ""
                                                                     ,_2: _U.list([])
                                                                     ,_3: "https://www.service-public.fr/"}]))};
   var update = F2(function (action,model) {
      var _p0 = action;
      if (_p0.ctor === "NoOp") {
            return model;
         } else {
            var tm = function (_) {    return _.tiledMenu;}(function (_) {    return _.mainContent;}(model));
            var mc = function (_) {    return _.mainContent;}(model);
            return _U.update(model,{mainContent: _U.update(mc,{tiledMenu: A2($TiledMenu.update,_p0._0,tm)})});
         }
   });
   var TiledMenuAction = function (a) {    return {ctor: "TiledMenuAction",_0: a};};
   var NoOp = {ctor: "NoOp"};
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([$Html$Attributes.id("container")]),
      _U.list([A2($Utils.renderMainMenu,_U.list(["Documentation"]),function (_) {    return _.mainMenu;}(model))
              ,A2($Html.div,
              _U.list([$Html$Attributes.id("subContainer")]),
              _U.list([A2(function (_) {
                 return _.wrapper;
              },
              function (_) {
                 return _.mainContent;
              }(model),
              A2($TiledMenu.view,
              A2($Signal.forwardTo,address,TiledMenuAction),
              function (_) {
                 return _.tiledMenu;
              }(function (_) {    return _.mainContent;}(model))))]))
              ,$Utils.pageFooter]));
   });
   var Model = F3(function (a,b,c) {    return {mainMenu: a,subMenu: b,mainContent: c};});
   var MainContent = F2(function (a,b) {    return {wrapper: a,tiledMenu: b};});
   var subMenu = {current: "",entries: _U.list([])};
   var initialModel = {mainMenu: $Utils.mainMenu,subMenu: subMenu,mainContent: initialContent};
   var main = $StartApp$Simple.start({model: initialModel,view: view,update: update});
   return _elm.Documentation.values = {_op: _op
                                      ,subMenu: subMenu
                                      ,MainContent: MainContent
                                      ,Model: Model
                                      ,initialModel: initialModel
                                      ,view: view
                                      ,NoOp: NoOp
                                      ,TiledMenuAction: TiledMenuAction
                                      ,update: update
                                      ,main: main
                                      ,initialContent: initialContent};
};