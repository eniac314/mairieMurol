Elm.TiledMenu = Elm.TiledMenu || {};
Elm.TiledMenu.make = function (_elm) {
   "use strict";
   _elm.TiledMenu = _elm.TiledMenu || {};
   if (_elm.TiledMenu.values) return _elm.TiledMenu.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Dict = Elm.Dict.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm),
   $UrlParsing = Elm.UrlParsing.make(_elm);
   var _op = {};
   var getByTitle = F2(function (s,m) {
      var d$ = A2($Dict.filter,
      F2(function (k,_p0) {    var _p1 = _p0;return _U.eq(function (_) {    return _.title;}(_p1._0),s);}),
      function (_) {
         return _.menuData;
      }(m));
      var ids = $Dict.keys(d$);
      var _p2 = $List.head(ids);
      if (_p2.ctor === "Nothing") {
            return $Result.toMaybe($String.toInt(s));
         } else {
            return $Maybe.Just(_p2._0);
         }
   });
   var nullTag = A2($Html.span,_U.list([$Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "display",_1: "none"}]))]),_U.list([]));
   var maybeElem = F2(function (s,f) {    return $String.isEmpty(s) ? nullTag : f(s);});
   var ShowMenu = {ctor: "ShowMenu"};
   var ShowTile = function (a) {    return {ctor: "ShowTile",_0: a};};
   var view = F2(function (address,model) {
      var _p3 = model.current;
      if (_p3.ctor === "Menu") {
            var toDivs = F3(function (_p5,_p4,acc) {
               var _p6 = _p4;
               var _p7 = _p6._0;
               var title = _p7.title;
               var iD = _p7.iD;
               var picture = _p7.picture;
               var link = _p7.link;
               var attr = function () {
                  var _p8 = link;
                  if (_p8.ctor === "Nothing") {
                        return _U.list([$Html$Attributes.$class("tile")
                                       ,$Html$Attributes.href("#")
                                       ,$Html$Attributes.id("tiledMenuTop")
                                       ,A2($Html$Events.onClick,address,ShowTile(iD))]);
                     } else {
                        var _p9 = _p8._0;
                        return _U.list([$Html$Attributes.$class("tile")
                                       ,$Html$Attributes.href(_p9)
                                       ,$Html$Attributes.target(A2($String.startsWith,"http",_p9) || A2($String.startsWith,"www",_p9) ? "_blank" : "_self")
                                       ,$Html$Attributes.id("tiledMenuTop")]);
                     }
               }();
               var picture$ = $String.isEmpty(picture) ? "/images/tiles/hebergements/placeholder.jpg" : picture;
               var htmlTile = A2($Html.a,
               attr,
               _U.list([A2($Html.figure,
               _U.list([]),
               _U.list([A2($Html.img,_U.list([$Html$Attributes.src(picture$)]),_U.list([]))
                       ,A2($Html.div,
                       _U.list([$Html$Attributes.$class("captionWrapper")]),
                       _U.list([A2($Html.figcaption,_U.list([]),_U.list([$Html.text(title)]))]))]))]));
               return A2($List._op["::"],htmlTile,acc);
            });
            var tiles = A3($Dict.foldr,toDivs,_U.list([]),model.menuData);
            return A2($Html.div,_U.list([$Html$Attributes.$class("tiledMenu")]),tiles);
         } else {
            return A2($Html.div,
            _U.list([$Html$Attributes.$class("selected")]),
            _U.list([_p3._0
                    ,A2($Html.a,
                    _U.list([$Html$Attributes.href("#tiledMenuTop"),A2($Html$Events.onClick,address,ShowMenu),$Html$Attributes.id("backToTiledMenu")]),
                    _U.list([$Html.text("Revenir au menu")]))
                    ,function (_) {
                       return _.photoLink;
                    }(model) ? A2($Html.a,
                    _U.list([$Html$Attributes.href("/Photothèque.html"),$Html$Attributes.id("photoLink")]),
                    _U.list([$Html.text("Photothèque")])) : nullTag]));
         }
   });
   var Content = function (a) {    return {ctor: "Content",_0: a};};
   var Menu = {ctor: "Menu"};
   var Tile = F4(function (a,b,c,d) {    return {title: a,iD: b,picture: c,link: d};});
   var nullTile = A4(Tile,"",0,"",$Maybe.Nothing);
   var update = F2(function (action,model) {
      var _p10 = action;
      if (_p10.ctor === "ShowTile") {
            var _p11 = A2($Maybe.withDefault,{ctor: "_Tuple2",_0: nullTile,_1: nullTag},A2($Dict.get,_p10._0,model.menuData));
            var newContent = _p11._1;
            return _U.update(model,{current: Content(newContent)});
         } else {
            return _U.update(model,{current: Menu});
         }
   });
   var Model = F3(function (a,b,c) {    return {current: a,menuData: b,photoLink: c};});
   var init = function (xs) {
      var zip = $List.map2(F2(function (v0,v1) {    return {ctor: "_Tuple2",_0: v0,_1: v1};}));
      var n = $List.length(xs);
      var xs$ = A2($List.map,
      function (_p12) {
         var _p13 = _p12;
         var _p15 = _p13._0._0;
         var _p14 = _p13._1;
         return {ctor: "_Tuple2"
                ,_0: _p14
                ,_1: {ctor: "_Tuple2"
                     ,_0: A4(Tile,_p15,_p14,_p13._0._1,$Maybe.Nothing)
                     ,_1: A2($Html.div,_U.list([]),A2($List._op["::"],A2($Html.h4,_U.list([]),_U.list([$Html.text(_p15)])),_p13._0._2))}};
      },
      A2(zip,xs,_U.range(0,n)));
      return A3(Model,Menu,$Dict.fromList(xs$),false);
   };
   var initAt = F2(function (urlParams,xs) {
      var model = init(xs);
      var title = $UrlParsing.getTitle(urlParams);
      var maybeId = A2(getByTitle,title,model);
      var _p16 = maybeId;
      if (_p16.ctor === "Nothing") {
            return model;
         } else {
            return A2(update,ShowTile(_p16._0),model);
         }
   });
   var initWithLink = function (xs) {
      var zip = $List.map2(F2(function (v0,v1) {    return {ctor: "_Tuple2",_0: v0,_1: v1};}));
      var n = $List.length(xs);
      var xs$ = A2($List.map,
      function (_p17) {
         var _p18 = _p17;
         var _p21 = _p18._0._0;
         var _p20 = _p18._0._3;
         var _p19 = _p18._1;
         var l$ = $String.isEmpty(_p20) ? $Maybe.Nothing : $Maybe.Just(_p20);
         return {ctor: "_Tuple2"
                ,_0: _p19
                ,_1: {ctor: "_Tuple2"
                     ,_0: A4(Tile,_p21,_p19,_p18._0._1,l$)
                     ,_1: A2($Html.div,_U.list([]),A2($List._op["::"],A2($Html.h4,_U.list([]),_U.list([$Html.text(_p21)])),_p18._0._2))}};
      },
      A2(zip,xs,_U.range(0,n)));
      return A3(Model,Menu,$Dict.fromList(xs$),false);
   };
   var initAtWithLink = F2(function (urlParams,xs) {
      var model = initWithLink(xs);
      var title = $UrlParsing.getTitle(urlParams);
      var maybeId = A2(getByTitle,title,model);
      var _p22 = maybeId;
      if (_p22.ctor === "Nothing") {
            return model;
         } else {
            return A2(update,ShowTile(_p22._0),model);
         }
   });
   var initPhoto = function (xs) {
      var zip = $List.map2(F2(function (v0,v1) {    return {ctor: "_Tuple2",_0: v0,_1: v1};}));
      var n = $List.length(xs);
      var xs$ = A2($List.map,
      function (_p23) {
         var _p24 = _p23;
         var _p26 = _p24._0._0;
         var _p25 = _p24._1;
         return {ctor: "_Tuple2"
                ,_0: _p25
                ,_1: {ctor: "_Tuple2"
                     ,_0: A4(Tile,_p26,_p25,_p24._0._1,$Maybe.Nothing)
                     ,_1: A2($Html.div,_U.list([]),A2($List._op["::"],A2($Html.h4,_U.list([]),_U.list([$Html.text(_p26)])),_p24._0._2))}};
      },
      A2(zip,xs,_U.range(0,n)));
      return A3(Model,Menu,$Dict.fromList(xs$),true);
   };
   var initAtPhoto = F2(function (urlParams,xs) {
      var model = initPhoto(xs);
      var title = $UrlParsing.getTitle(urlParams);
      var maybeId = A2(getByTitle,title,model);
      var _p27 = maybeId;
      if (_p27.ctor === "Nothing") {
            return model;
         } else {
            return A2(update,ShowTile(_p27._0),model);
         }
   });
   return _elm.TiledMenu.values = {_op: _op
                                  ,Model: Model
                                  ,Tile: Tile
                                  ,Menu: Menu
                                  ,Content: Content
                                  ,init: init
                                  ,initAt: initAt
                                  ,initAtPhoto: initAtPhoto
                                  ,initAtWithLink: initAtWithLink
                                  ,initWithLink: initWithLink
                                  ,initPhoto: initPhoto
                                  ,ShowTile: ShowTile
                                  ,ShowMenu: ShowMenu
                                  ,update: update
                                  ,view: view
                                  ,maybeElem: maybeElem
                                  ,nullTile: nullTile
                                  ,nullTag: nullTag
                                  ,getByTitle: getByTitle};
};